{"version":3,"sources":["Components/Card.js","Components/cardList.js","Components/searchBox.js","Components/Scroll.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","cardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAeeA,EAZJ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCULK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACI,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHNS,SCKZC,EAXC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC3B,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAC9EC,SAAUH,OCGHI,EARF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCkDJC,E,kDA9CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAM,CACPvB,OAAQ,GACRK,YAAa,IAJR,E,qDAOb,WAAqB,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBASzC,WAAS,IAAD,OACEC,EAAeC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC1C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAIpE,OAA8B,IAA3BH,KAAKP,MAAMvB,OAAOmC,OACV,yCAIH,sBAAKvC,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAnCpBO,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.8a309f1c.chunk.js","sourcesContent":["import React from 'react'\n// import { robots } from './robots';\n\nconst Card=({name, email,id})=>{\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\nconst cardList = ({ robots }) => {\n    return (\n        <div>\n            {\n            robots.map((user, i) => {\n            return (\n                <Card key={i} \n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email} />\n                )\n            })\n        }\n        </div>\n    );\n}\n\nexport default cardList;","import React from 'react'\n\nconst SearchBox=({searchField, searchChange})=>{\n    return(\n        <div className='pa2'>\n        <input className='pa2 ba b--green bg-lightest-blue' type='search' placeholder='search-robots'\n        onChange={searchChange}/>\n        </div>\n    )\n    \n}\n\n\nexport default SearchBox;","import React from 'react'\nconst Scroll=(props)=>{\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll","import React from 'react'\nimport CardList from '../Components/cardList'\nimport SearchBox from '../Components/searchBox'\nimport Scroll from '../Components/Scroll'\n\n\n\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            robots: [],\n            searchField: ''\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>response.json())\n        .then(users =>this.setState({robots: users}));\n        \n    }\n\n\n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value})\n    }\n\n    render(){\n        const filteredRobots=this.state.robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n                \n\n        })\n        if(this.state.robots.length===0){\n            return <h1>Loading</h1>\n        }\n        else{\n            return (\n                <div className='tc'>\n                <h1>ROBOFRIENDS</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <CardList robots={filteredRobots}/>\n                </Scroll>\n                \n                </div>\n    \n    \n            );\n\n        }\n        \n    }    \n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  //Array of robots\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}